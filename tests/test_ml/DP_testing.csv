#,source,problem,Answer,cat,one more predictor,Another predictor,oneLastPredicrot,predictor_class,weightedwordPredictor
1,source making,"If an application is to be portable, it needs to encapsulate platform dependencies. These ""platforms"" might include: windowing system, operating system, database, etc. Too often, this encapsulation is not engineered in advance, and lots of #ifdef case statements with options for all currently supported platforms begin to procreate like rabbits throughout the code.",Abstract Factory ,Creational,1,,,,
2,source making,An application needs to create the elements of a complex aggregate. The specification for the aggregate exists on secondary storage and one of many representations needs to be built in primary storage.,Builder,Creational,1,,,,
3,source making,"A framework needs to standardize the architectural model for a range of applications, but allow for individual applications to define their own domain objects and provide for their instantiation.",Factory Method,Creational,1,,,,
4,source making,"Object pools (otherwise known as resource pools) are used to manage the object caching. A client with access to a Object pool can avoid creating a new Objects by simply asking the pool for one that has already been instantiated instead. Generally the pool will be a growing pool, i.e. the pool itself will create new objects if the pool is empty, or we can have a pool, which restricts the number of objects created.It is desirable to keep all Reusable objects that are not currently in use in the same object pool so that they can be managed by one coherent policy. To achieve this, the Reusable Pool class is designed to be a singleton class.",Object Pool,Creational,0,,,,
5,source making,"Application ""hard wires"" the class of object to create in each ""new"" expression.",Prototype,Creational,1,,,,
6,source making,"Application needs one, and only one, instance of an object. Additionally, lazy initialization and global access are necessary.",Singleton,Creational,1,,,,
7,source making,"An ""off the shelf"" component offers compelling functionality that you would like to reuse, but its ""view of the world"" is not compatible with the philosophy and architecture of the system currently being developed.",Adapter,Structural,1,,,,
8,source making,"""Hardening of the software arteries"" has occurred by using subclassing of an abstract base class to provide alternative implementations. This locks in compile-time binding between interface and implementation. The abstraction and implementation cannot be independently extended or composed.",Bridge,Structural,,,,,
9,source making,"Application needs to manipulate a hierarchical collection of ""primitive"" and ""composite"" objects. Processing of a primitive object is handled one way, and processing of a composite object is handled differently. Having to query the ""type"" of each object before attempting to process it is not desirable.",Composite,Structural,,,,,
10,source making,You want to add behavior or state to individual objects at run-time. Inheritance is not feasible because it is static and applies to an entire class.,Decorator,Structural,,,,,
11,source making,A segment of the client community needs a simplified interface to the overall functionality of a complex subsystem.,Facade,Structural,,,,,
12,source making,"Designing objects down to the lowest levels of system ""granularity"" provides optimal flexibility, but can be unacceptably expensive in terms of performance and memory usage.",Flyweight,Structural,,,,,
13,source making,"A class may expose its attributes (class variables) to manipulation when manipulation is no longer desirable, e.g. after construction. Using the private class data design pattern prevents that undesirable manipulation.A class may have one-time mutable attributes that cannot be declared final. Using this design pattern allows one-time setting of those class attributes. The motivation for this design pattern comes from the design goal of protecting class state by minimizing the visibility of its attributes (data).",Private Class Data,Structural,,,,,
14,source making,"You need to support resource-hungry objects, and you do not want to instantiate such objects unless and until they are actually requested by the client.",Proxy,Structural,,,,,
15,source making,"There is a potentially variable number of ""handler"" or ""processing element"" or ""node"" objects, and a stream of requests that must be handled. Need to efficiently process the requests without hard-wiring handler relationships and precedence, or request-to-handler mappings.",Chain of Responsibility,Behavioral,,,,,
16,source making,Need to issue requests to objects without knowing anything about the operation being requested or the receiver of the request.,Command,Behavioral,,,,,
17,source making,"A class of problems occurs repeatedly in a well-defined and well-understood domain. If the domain were characterized with a ""language"", then problems could be easily solved with an interpretation ""engine"".",Interpreter,Behavioral,,,,,
18,source making,"Need to ""abstract"" the traversal of wildly different data structures so that algorithms can be defined that are capable of interfacing with each transparently.",Iterator,Behavioral,,,,,
19,source making,"We want to design reusable components, but dependencies between the potentially reusable pieces demonstrates the ""spaghetti code"" phenomenon (trying to scoop a single serving results in an ""all or nothing clump"").",Mediator,Behavioral,,,,,
20,source making,"Need to restore an object back to its previous state (e.g. ""undo"" or ""rollback"" operations).",Memento,Behavioral,,,,,
21,source making,"Given that an object reference may be optionally null, and that the result of a null check is to do nothing or use some default value, how can the absence of an object — the presence of a null reference — be treated transparently?",Null Object,Behavioral,,,,,
22,source making,A large monolithic design does not scale well as new graphing or monitoring requirements are levied.,Observer,Behavioral,,,,,
23,source making,"A monolithic object's behavior is a function of its state, and it must change its behavior at run-time depending on that state. Or, an application is characterized by large and numerous case statements that vector flow of control based on the state of the application.",State,Behavioral,,,,,
24,source making,"One of the dominant strategies of object-oriented design is the ""open-closed principle"". Figure demonstrates how this is routinely achieved - encapsulate interface details in a base class, and bury implementation details in derived classes. Clients can then couple themselves to an interface, and not have to experience the upheaval associated with change: no impact when the number of derived classes changes, and no impact when the implementation of a derived class changes. A generic value of the software community for years has been, ""maximize cohesion and minimize coupling"". The object-oriented design approach shown in figure is all about minimizing coupling. Since the client is coupled only to an abstraction (i.e. a useful fiction), and not a particular realization of that abstraction, the client could be said to be practicing ""abstract coupling"" . an object-oriented variant of the more generic exhortation ""minimize coupling"".
A more popular characterization of this ""abstract coupling"" principle is ""Program to an interface, not an implementation"".Clients should prefer the ""additional level of indirection"" that an interface (or an abstract base class) affords. The interface captures the abstraction (i.e. the ""useful fiction"") the client wants to exercise, and the implementations of that interface are effectively hidden",Strategy,Behavioral,,,,,
25,source making,"Two different components have significant similarities, but demonstrate no reuse of common interface or implementation. If a change common to both components becomes necessary, duplicate effort must be expended.",Template Method,Behavioral,1,,,,
26,source making,"Many distinct and unrelated operations need to be performed on node objects in a heterogeneous aggregate structure. You want to avoid ""polluting"" the node classes with these operations. And, you don't want to have to query the type of each node and cast the pointer to the correct type before performing the desired operation.",Visitor,Behavioral,,,,,
27,DP in java,addresses the situation in which a client knows when to create an object but doesn’t know which class to instantiate?,Factory Method,Creational,0,,,,
28,DP in java,provides for the storage and restoration of an object’s state,Memento,Behavioral,1,,,,
29,DP in java,"The mechanics of Java menus make it easy to apply the COMMAND pattern but do not require that you organize your code as commands. In fact, it is common to develop an application in which a single object listens to all the events in a GUI",Mediator,Behavioral,0,,,,
30,DP in java,Let classes in the ProcessComponent hierarchy implement iterator() to create instances of an appropriate iterator class,Factory Method,Creational,0,,,,
31,Wordware Applications Library,We need to make a builder more extendible to allow different functional processes to occur without changing the builder,Abstract Factory ,Creational,0,,,,
32,Wordware Applications Library,"We wish to have certain functions associated with a class type only when desired, but not all the time",Decorator,Structural,1,,,,
33,Wordware Applications Library,"We have several classes whose methods make up a process, but we need to control the order in which these classes are called by code outside the assembly",Facade,Structural,0,,,,
34,Wordware Applications Library,A text document uses individual object instances for each character and quickly becomes unwieldy,Flyweight,Structural,1,,,,
35,Wordware Applications Library,"You have an object in a different domain or server address you would like to access in the current domain, but do not want to allow construction of the object in the local domain",Proxy,Structural,1,,,,
36,Wordware Applications Library,A global class in the application needs to hide its constructor and maintain only one instance of itself while allowing all of its methods to be accessed as instance methods,Singleton,Creational,1,,,,
37,Wordware Applications Library,"A group of classes each have processes to run in turn, but there is no way to directly determine in which class order each should run its process",Chain of Responsibility,Behavioral,0,,,,
38,Wordware Applications Library,A document object needs a way to add and store undo and redo actions,Command,Behavioral,0.66,,,,
39,Wordware Applications Library,The format of a date needs to be different depending on the particular type of date expression needed,Interpreter,Behavioral,1,,,,
40,Wordware Applications Library,We need to create classes frommetadata from remote packages or assemblies and load them using a common interpreter,Interpreter,Behavioral,1,,,,
41,Wordware Applications Library,"A list object needs a way to move through each element in the list in consecutive order, retaining the position of the current record",Iterator,Behavioral,0,,,,
42,Wordware Applications Library,"Message windows reference each other directly, and if new windows are added the code cannot easily manage each window’s reference to the other",Mediator,Behavioral,0,,,,
43,Wordware Applications Library,A class needs to have its internal state captured and then restored without violating the class’s encapsulation,Memento,Behavioral,1,,,,
44,Wordware Applications Library," We have several child forms of an MDI form that we need to inform of changes that occur in the MDI form, and we have no way to do this automatically",Observer,Behavioral,0,0,,,
45,Wordware Applications Library,We have no way to determine the state of an object without performing calculations outside an object,State,Behavioral,1,1,,,
46,Wordware Applications Library,We have a series of algorithmic classes that have no correlation and are not easily exchanged but are needed to do so,Strategy,Behavioral,0,0,,,
47,Wordware Applications Library,Shared functionality between classes is desired without copying functionality,Template Method,Behavioral,0,0,,,
48,Wordware Applications Library,We wish to allow one class to use another’s methods without using direct inheritance,Adapter,Structural,0,0,,,
49,Wordware Applications Library,We need to allow a class to use functionality from a series of class types without using direct inheritance,Bridge,Structural,0.66,0.33,,,
50,Wordware Applications Library,A way is needed to allow a group of classes with a common method and different functionality to work together in sequence without compiling the sequence beforehand,Composite,Structural,0.33,0.33,,,
51,Wordware Applications Library,Different class types need a common interface to a factory method for creation of internal attributes,Factory Method,Creational,1,1,,,
52,Wordware Applications Library,We need to make a builder more extendible to allow different functional processes to occur without changing the builder ,Factory Method,Creational,0,0,,,
53,Wordware Applications Library,"A class needs several operations to create and initialize each of its attributes in an expected order of operations, and each class type instance needs different attribute values",Builder,Creational,0,0,,,
54,Wordware Applications Library,"A factory produces classes that need initialization, configuration, data, or state set during creation and this can differ between class types and spans multiple operations",Builder,Creational,0,0,0,,
55,Wordware Applications Library,A class that cannot be constructed outside its assembly or package needs a copy made that keeps its current state intact,Prototype,Creational,0,1,,,
56,Patterns of Java,"Consider the problem of writing a framework for desktop applications. Such applications are typically organized around documents or files. Their operation usually begins with a command to create or edit a word processing document, spreadsheet, time line, or other type of document the application is intended to work with. A framework to support this type of application will include high-level support for common operations such as creating, opening, or saving documents.",Factory Method,Creational,,,,,
57,Patterns of Java,"Suppose you have the task of building a user-interface framework that works on top of multiple windowing systems, such as Windows, Motif, or MacOS. It must work on each platform with the platform's native look and feel. You organize it by creating an abstract class for each type of widget (text field, pushbutton, list box, etc.) and then writing a concrete subclass of each of those classes for each supported platform. To make this robust, you need to ensure that all the widget objects created are for the desired platform.",Abstract Factory,Creational,,,,,
58,Patterns of Java,Consider the problem of writing an email gateway program. The program receives e-mail messages that are in MIME format. It forwards them in a different format for different kinds of e-mail systems.,Builder,Creational,,,,,
59,Patterns of Java,"Suppose that you are writing a Computer-Assisted Design (CAD) program that allows its users to draw diagrams from a palette of symbols. The program will have a core set of built-in symbols. However, people with different and specialized interests will use the program. The core set of symbols will not be adequate for people with a specialized interest. These people will want additional symbols that are specific to their interests. Most users of this program will have a specialized interest. It must be possible to provide additional sets of symbols that users can add to the program to suit their needs.",Prototype,Creational,,,,,
60,Patterns of Java,"Suppose you need to write a class that an applet can use to ensure that no more than one audio clip is played at a time. If an applet contains two pieces of code that independently play audio clips, then it is possible for both to be playing at the same time. When two audio clips play at the same time, the results depend on the platform. The results may range from confusing, with users hearing both audio clips together, to terrible, with the platform's sound-producing mechanism unable to cope with playing two different audio clips at once.",Singleton,Creational,,,,,
61,Patterns of Java,"Suppose you have been given the assignment of writing a class library to provide access to a proprietary database. Clients will send queries to the database through a network connection. The database server will receive queries through the network connection and return the results through the same connection. For a program to query the database, it must have a connection to the database. A convenient way for programmers who will use the library to manage connections is for each part of a program that needs a connection to create its own connection.",Object Pool,Creational,,,,,
62,Patterns of Java,"Suppose that you are writing a method that copies an array of objects. The method is supposed to filter out objects that do not meet certain criteria, so that the copied array may not contain all of the elements in the original array. To promote reuse, you want the method to be independent of the filtering criteria being used.",Adapter,Structural,,,,,
63,Patterns of Java,"Suppose you are writing classes to browse inventory in a warehouse. There will be a user interface that allows a user to see the description, quantity on hand, location, and other information about each inventory item. The inventory browsing classes will be part of a customizable application. For this reason, they must be independent of the actual class that provides collections of inventory items.",Iterator,Behavioral,,,,,
64,Patterns of Java,"Suppose you need to provide Java classes that access physical sensors for control applications. These are devices such as scales, speed-measuring devices, and location-sensing devices. What these devices have in common is that they perform a physical measurement and produce a number. One way that these devices differ is in the type of measurement that they produce. The scale produces a single number based on a measurement at a single point in time. The speed-measuring device produces a single measurement that is an average over a period of time. The location-sensing device produces a stream of measurements. The software that you are writing will need to work with sensors from multiple manufacturers called Eagle and Hawk.",Bridge,Structural,,,,,
65,Patterns of Java,"Consider the organization of classes to support the creation and sending of email messages. To use these classes, a client must know of at least these six of them, the relationships between them, and the order in which it must create instances of the classes. If every client of these classes must take on this additional complexity, it makes the email classes more difficult to reuse.",Facade,Structural,,,,,
66,Patterns of Java,"Suppose that you are writing a word processor. The word processor is structured around classes such as DocumentElement, DocChar, DocumentContainer, and CharacterContext. Each DocChar object represents an individual character within a document. However, the current design allocates a separate DocChar object for each character, potentially leading to excessive memory usage, especially for larger documents. To address this issue, there's a proposal to optimize memory usage by introducing shared DocChar objects for characters that occur multiple times within the document. This revised design involves reorganizing the classes and moving extrinsic attributes like font information outside the DocChar class into a CharacterContext class.",Flyweight,Structural,,,,,
67,Patterns of Java,"Suppose you are writing software for a new kind of smart food processor that can be fed raw ingredients and by slicing, dicing, mixing, boiling, baking, frying, and stirring is able to produce cooked, ready-to-eat food. On a mechanical level, the new food processor is a very sophisticated piece of equipment. However, a crucial part of the food processor is a selection of programs to prepare different kinds of foods. A program that can turn flour, water, yeast, and other ingredients into different kinds of bread is very different from a program that can stir-fry shrimp to exactly the right texture. The food processor will be required to run a great variety of programs that allow it to produce a great variety of foods. Because of the large variety of programs that will be required, it is not possible to build them all into the food processor. Instead, the food processor will load its programs from a CD-ROM or similar medium.",Dynamic Linkage,Structural,,,,,
68,Patterns of Java,"Suppose you are part of a team that has written a large Java applet for a company that operates a chain of home improvement warehouses. The applet allows people to buy everything that the warehouses sell through a Web page. In addition to offering a catalog, it includes a variety of assistants to allow customers to decide just what they need. There are more assistants, but they are not the point of this discussion. The point is that the applet is very large. Due to its size, it takes an unacceptably long amount of time for a browser to download the applet over a modem connection.",Virtual Proxy,Structural,,,,,
69,Patterns of Java,"Suppose you are responsible for maintaining the software of a security system that controls physical access to a building. Its basic architecture is that a card reader or other data entry device captures some identifying information and passes the information to the object that controls a door. If the object that controls the door is satisfied with the information, it unlocks the door. Suppose that you need to integrate this access control mechanism with a surveillance system. A surveillance system typically has more cameras connected to it than it has TV monitors. Most of the TV monitors cycle through the images from different cameras. They show a picture from each camera for a few seconds and then move on to the next camera for which the monitor is responsible. There are rules about how the surveillance system is supposed to be set up to ensure its effectiveness.",Decorator,Structural,,,,,
70,Patterns of Java,"Suppose that you are writing a document formatting program. It formats characters into lines of text organized into columns that are organized into pages. However, a document may contain other elements. Columns and pages can contain frames that can contain columns. Columns, frames, and lines of text can contain images.",Composite,Structural,,,,,
71,Patterns of Java,Suppose you want to design a word processing program so that it can undo and redo commands. A way to accomplish this is to materialize each command as an object with do and undo methods.,Command,Behavioral,,,,,
72,Patterns of Java,Suppose you have to implement a dialog box in order to specify information to reserve a banquet room in a hotel. The purpose of the dialog is to provide information to reserve a banquet room in a hotel. The requirements of the dialog give rise to a number of dependencies among the dialog's objects.,Mediator,Behavioral,,,,,
73,Patterns of Java,"Suppose that you are working for a company that manufactures smoke detectors, motion sensors, and other security devices. To take advantage of new market opportunities, your company plans to introduce a new line of devices. These devices will be able to send a signal to a security card that can be installed in most computers. The hope is that companies that make security-monitoring systems will integrate these devices and cards with their systems. To make it easy to integrate the cards with monitoring systems, you have been given the task of creating an easy-to-use API. The API must allow your future customers to easily integrate their programs with it so their programs will receive notifications from the security card. It must work without forcing the customers to alter the architecture of their existing software. All that the API may assume about the customer's software is that at least one, and possibly more than one, object will have a method that should be called when a notification is received from a security device.",Observer,Behavioral,,,,,
74,Patterns of Java,Suppose that you are writing a dialog for editing parameters of a program. The dialog will have buttons for specifying the disposition of changes you have made. The dialog will have an OK button that saves the parameter values in the dialog to both a file and the program's working values. The dialog will have a Save button that saves the parametervalues only to a file. The dialog will have an Apply button that saves the parameter values only to the program's working values. The dialog will have a Revert button that restores the dialog values from the file.,State,Behavioral,,,,,
75,Patterns of Java,"You have been given the task of writing classes to encapsulate an enterprise's business rules. Because these classes will be used in a variety of environments, there is a requirement that these objects be able to route warning messages to a dialog box, a log file, other destinations, or nowhere at all.",Null Object,Behavioral,,,,,
76,Patterns of Java,Suppose you have to write a program that displays calendars. One of the requirements for the program is that it be able to display sets of holidays celebrated by different nations and different religious groups. The user must be able to specify which sets of holidays to display. You would like to satisfy the requirement by putting the logic for each set of holidays in a separate class. This will give you a set of small classes to which you could easily add more classes. You want classes that use these holiday classes to be unaware of any specific set of holidays.,Strategy,Behavioral,,,,,
77,Patterns of Java,"Suppose that you have the task of writing a reusable class for logging users into an application or applet. In addition to being reusable and easy to use, the tasks of the class will be to: Prompt the user for a user ID and password. Authenticate the user ID and password. The result of the authentication operation should be an object. If the authentication operation produces some information needed later as proof of authentication, then the object produced by the authentication operation should encapsulate the information. While the authentication operation is in progress, the user should see a changing and possibly animated display that tells the user that authentication is in progress and all is well. Notify the rest of the application or applet that login is complete and make the object produced by the authentication operation available to the rest of the application. Every application or applet will have to provide its own logic for these tasks.",Template Method,Behavioral,,,,,
78,Patterns of Java,"Suppose you have the assignment of adding new features to a word processor related to its ability to produce a table of contents. From the viewpoint of a user, there will be a dialog that allows the user to specify information that guides the building of a table of contents. The word processor allows a style name to be associated with each paragraph. The dialog will allow the user to specify which paragraph styles correspond to headings that should appear in the table of contents. The word processor uses information specified in the dialog to build an internal table that contains all the information it needs to build a multilevel table of contents. In the rest of this description, the table is referred to as the internal ToC table. The information in each row of the table will include a level number that can correspond to chapter, section, and subsection or any other hierarchical organization the user wants to represent. The rows of the table will also include a paragraph style and other information for formatting the table of contents. If a paragraph style appears in the table, it means paragraphs with that style are headings whose first line will appear in that level of a table of contents. In addition to adding the dialog and internal ToC table to the word processor, you will have to add these table-of-contents-related features: Generate and insert a table of contents for a single file document into that document. Reorganize a single file document into a multifile document, based on a heading level in the internal ToC table.",Visitor,Behavioral,,,,,
79,Patterns of Java,"If an application is to be portable, it needs to encapsulate platform dependencies. These ""platforms"" might include: windowing system, operating system, database, etc. Too often, this encapsulation is not engineered in advance, and lots of #ifdef case statements with options for all currently supported platforms begin to procreate like rabbits throughout the code.",Abstract Factory ,Creational,,,,,
80,Patterns of Java,An application needs to create the elements of a complex aggregate. The specification for the aggregate exists on secondary storage and one of many representations needs to be built in primary storage.,Builder,Creational,,,,,
81,Patterns of Java,"A framework needs to standardize the architectural model for a range of applications, but allow for individual applications to define their own domain objects and provide for their instantiation.",Factory Method,Creational,,,,,
82,Patterns of Java,"Object pools (otherwise known as resource pools) are used to manage the object caching. A client with access to a Object pool can avoid creating a new Objects by simply asking the pool for one that has already been instantiated instead. Generally the pool will be a growing pool, i.e. the pool itself will create new objects if the pool is empty, or we can have a pool, which restricts the number of objects created.It is desirable to keep all Reusable objects that are not currently in use in the same object pool so that they can be managed by one coherent policy. To achieve this, the Reusable Pool class is designed to be a singleton class.",Object Pool,Creational,,,,,
83,Patterns of Java,"Application ""hard wires"" the class of object to create in each ""new"" expression.",Prototype,Creational,,,,,
84,Patterns of Java,"Application needs one, and only one, instance of an object. Additionally, lazy initialization and global access are necessary.",Singleton,Creational,,,,,
85,Patterns of Java,"An ""off the shelf"" component offers compelling functionality that you would like to reuse, but its ""view of the world"" is not compatible with the philosophy and architecture of the system currently being developed.",Adapter,Structural,,,,,
86,Patterns of Java,"""Hardening of the software arteries"" has occurred by using subclassing of an abstract base class to provide alternative implementations. This locks in compile-time binding between interface and implementation. The abstraction and implementation cannot be independently extended or composed.",Bridge,Structural,,,,,
87,Patterns of Java,"Application needs to manipulate a hierarchical collection of ""primitive"" and ""composite"" objects. Processing of a primitive object is handled one way, and processing of a composite object is handled differently. Having to query the ""type"" of each object before attempting to process it is not desirable.",Composite,Structural,,,,,
88,Patterns of Java,You want to add behavior or state to individual objects at run-time. Inheritance is not feasible because it is static and applies to an entire class.,Decorator,Structural,,,,,
89,Patterns of Java,A segment of the client community needs a simplified interface to the overall functionality of a complex subsystem.,Facade,Structural,,,,,
90,Patterns of Java,"Designing objects down to the lowest levels of system ""granularity"" provides optimal flexibility, but can be unacceptably expensive in terms of performance and memory usage.",Flyweight,Structural,,,,,
91,Patterns of Java,"A class may expose its attributes (class variables) to manipulation when manipulation is no longer desirable, e.g. after construction. Using the private class data design pattern prevents that undesirable manipulation.A class may have one-time mutable attributes that cannot be declared final. Using this design pattern allows one-time setting of those class attributes. The motivation for this design pattern comes from the design goal of protecting class state by minimizing the visibility of its attributes (data).",Private Class Data,Structural,,,,,
92,Patterns of Java,"You need to support resource-hungry objects, and you do not want to instantiate such objects unless and until they are actually requested by the client.",Proxy,Structural,,,,,
93,Patterns of Java,"There is a potentially variable number of ""handler"" or ""processing element"" or ""node"" objects, and a stream of requests that must be handled. Need to efficiently process the requests without hard-wiring handler relationships and precedence, or request-to-handler mappings.",Chain of Responsibility,Behavioral,,,,,
94,Patterns of Java,Need to issue requests to objects without knowing anything about the operation being requested or the receiver of the request.,Command,Behavioral,,,,,
95,Patterns of Java,"A class of problems occurs repeatedly in a well-defined and well-understood domain. If the domain were characterized with a ""language"", then problems could be easily solved with an interpretation ""engine"".",Interpreter,Behavioral,,,,,
96,Patterns of Java,"Need to ""abstract"" the traversal of wildly different data structures so that algorithms can be defined that are capable of interfacing with each transparently.",Iterator,Behavioral,,,,,
97,Patterns of Java,"We want to design reusable components, but dependencies between the potentially reusable pieces demonstrates the ""spaghetti code"" phenomenon (trying to scoop a single serving results in an ""all or nothing clump"").",Mediator,Behavioral,,,,,
98,Patterns of Java,"Need to restore an object back to its previous state (e.g. ""undo"" or ""rollback"" operations).",Memento,Behavioral,,,,,
99,Patterns of Java,"Given that an object reference may be optionally null, and that the result of a null check is to do nothing or use some default value, how can the absence of an object — the presence of a null reference — be treated transparently?",Null Object,Behavioral,,,,,
100,Patterns of Java,A large monolithic design does not scale well as new graphing or monitoring requirements are levied.,Observer,Behavioral,,,,,
101,Patterns of Java,"A monolithic object's behavior is a function of its state, and it must change its behavior at run-time depending on that state. Or, an application is characterized by large and numerous case statements that vector flow of control based on the state of the application.",State,Behavioral,,,,,
102,Patterns of Java,"One of the dominant strategies of object-oriented design is the ""open-closed principle"". Figure demonstrates how this is routinely achieved - encapsulate interface details in a base class, and bury implementation details in derived classes. Clients can then couple themselves to an interface, and not have to experience the upheaval associated with change: no impact when the number of derived classes changes, and no impact when the mplementation of a derived class changes. A generic value of the software community for years has been, ""maximize cohesion and minimize coupling"". The object-oriented design approach shown in figure is all about minimizing coupling. Since the client is coupled only to an abstraction (i.e. a useful fiction), and not a particular realization of that abstraction, the client could be said to be practicing ""abstract coupling"" . an object-oriented variant of the more generic exhortation ""minimize coupling"". A more popular characterization of this ""abstract coupling"" principle is ""Program to an interface, not an implementation"".Clients should prefer the ""additional level of indirection"" that an interface (or an abstract base class) affords. The interface captures the abstraction (i.e. the ""useful fiction"") the client wants to exercise, and the implementations of that interface are effectively hidden",Strategy,Behavioral,,,,,
103,Patterns of Java,"Two different components have significant similarities, but demonstrate no reuse of common interface or implementation. If a change common to both components becomes necessary, duplicate effort must be expended.",Template Method,Behavioral,,,,,
104,Patterns of Java,"Many distinct and unrelated operations need to be performed on node objects in a heterogeneous aggregate structure. You want to avoid ""polluting"" the node classes with these operations. And, you don't want to have to query the type of each node and cast the pointer to the correct type before performing the desired operation.",Visitor,Behavioral,,,,,
105,Patterns of Java,addresses the situation in which a client knows when to create an object but doesn’t know which class to instantiate?,Factory Method,Creational,,,,,
106,Patterns of Java,provides for the storage and restoration of an object’s state,Memento,Behavioral,,,,,
107,Patterns of Java,"The mechanics of Java menus make it easy to apply the COMMAND pattern but do not require that you organize your code as commands. In fact, it is common to develop an application in which a single object listens to all the events in a GUI",Mediator,Behavioral,,,,,
108,Patterns of Java,Let classes in the ProcessComponent hierarchy implement iterator() to create instances of an appropriate iterator class,Factory Method,Creational,,,,,
109,Patterns of Java,We need to make a builder more extendible to allow different functional processes to occur without changing the builder,Abstract Factory ,Creational,,,,,
110,Patterns of Java,"We wish to have certain functions associated with a class type only when desired, but not all the time",Decorator,Structural,,,,,
111,Patterns of Java,"We have several classes whose methods make up a process, but we need to control the order in which these classes are called by code outside the assembly",Facade,Structural,,,,,
112,Patterns of Java,A text document uses individual object instances for each character and quickly becomes unwieldy,Flyweight,Structural,,,,,
113,Patterns of Java,"You have an object in a different domain or server address you would like to access in the current domain, but do not want to allow construction of the object in the local domain",Proxy,Structural,,,,,
114,Patterns of Java,A global class in the application needs to hide its constructor and maintain only one instance of itself while allowing all of its methods to be accessed as instance methods,Singleton,Creational,,,,,
115,Patterns of Java,"A group of classes each have processes to run in turn, but there is no way to directly determine in which class order each should run its process",Chain of Responsibility,Behavioral,,,,,
116,Patterns of Java,A document object needs a way to add and store undo and redo actions,Command,Behavioral,,,,,
117,Patterns of Java,The format of a date needs to be different depending on the particular type of date expression needed,Interpreter,Behavioral,,,,,
118,Patterns of Java,We need to create classes frommetadata from remote packages or assemblies and load them using a common interpreter,Interpreter,Behavioral,,,,,
119,Patterns of Java,"A list object needs a way to move through each element in the list in consecutive order, retaining the position of the current record",Iterator,Behavioral,,,,,
120,Patterns of Java,"Message windows reference each other directly, and if new windows are added the code cannot easily manage each window’s reference to the other",Mediator,Behavioral,,,,,
121,Patterns of Java,A class needs to have its internal state captured and then restored without violating the class’s encapsulation,Memento,Behavioral,,,,,
122,Patterns of Java," We have several child forms of an MDI form that we need to inform of changes that occur in the MDI form, and we have no way to do this automatically",Observer,Behavioral,,,,,
123,Patterns of Java,We have no way to determine the state of an object without performing calculations outside an object,State,Behavioral,,,,,
124,Patterns of Java,We have a series of algorithmic classes that have no correlation and are not easily exchanged but are needed to do so,Strategy,Behavioral,,,,,
125,Patterns of Java,Shared functionality between classes is desired without copying functionality,Template Method,Behavioral,,,,,
126,Patterns of Java,We wish to allow one class to use another’s methods without using direct inheritance,Adapter,Structural,,,,,
127,Patterns of Java,We need to allow a class to use functionality from a series of class types without using direct inheritance,Bridge,Structural,,,,,
128,Patterns of Java,A way is needed to allow a group of classes with a common method and different functionality to work together in sequence without compiling the sequence beforehand,Composite,Structural,,,,,
129,Patterns of Java,Different class types need a common interface to a factory method for creation of internal attributes,Factory Method,Creational,,,,,
130,Patterns of Java,We need to make a builder more extendible to allow different functional processes to occur without changing the builder ,Factory Method,Creational,,,,,
131,Patterns of Java,"A class needs several operations to create and initialize each of its attributes in an expected order of operations, and each class type instance needs different attribute values",Builder,Creational,,,,,
132,Patterns of Java,"A factory produces classes that need initialization, configuration, data, or state set during creation and this can differ between class types and spans multiple operations",Builder,Creational,,,,,
133,Patterns of Java,A class that cannot be constructed outside its assembly or package needs a copy made that keeps its current state intact,Prototype,Creational,,,,,