#,source,problem,Answer,cat,one more predictor,Another predictor,oneLastPredicrot,predictor_class,weightedwordPredictor
1,source making,"If an application is to be portable, it needs to encapsulate platform dependencies. These ""platforms"" might include: windowing system, operating system, database, etc. Too often, this encapsulation is not engineered in advance, and lots of #ifdef case statements with options for all currently supported platforms begin to procreate like rabbits throughout the code.",Abstract Factory ,Creational,1,,,,
2,source making,An application needs to create the elements of a complex aggregate. The specification for the aggregate exists on secondary storage and one of many representations needs to be built in primary storage.,Builder,Creational,1,,,,
3,source making,"A framework needs to standardize the architectural model for a range of applications, but allow for individual applications to define their own domain objects and provide for their instantiation.",Factory Method,Creational,1,,,,
4,source making,"Object pools (otherwise known as resource pools) are used to manage the object caching. A client with access to a Object pool can avoid creating a new Objects by simply asking the pool for one that has already been instantiated instead. Generally the pool will be a growing pool, i.e. the pool itself will create new objects if the pool is empty, or we can have a pool, which restricts the number of objects created.It is desirable to keep all Reusable objects that are not currently in use in the same object pool so that they can be managed by one coherent policy. To achieve this, the Reusable Pool class is designed to be a singleton class.",Object Pool,Creational,0,,,,
5,source making,"Application ""hard wires"" the class of object to create in each ""new"" expression.",Prototype,Creational,1,,,,
6,source making,"Application needs one, and only one, instance of an object. Additionally, lazy initialization and global access are necessary.",Singleton,Creational,1,,,,
7,source making,"An ""off the shelf"" component offers compelling functionality that you would like to reuse, but its ""view of the world"" is not compatible with the philosophy and architecture of the system currently being developed.",Adapter,Structural,1,,,,
8,source making,"""Hardening of the software arteries"" has occurred by using subclassing of an abstract base class to provide alternative implementations. This locks in compile-time binding between interface and implementation. The abstraction and implementation cannot be independently extended or composed.",Bridge,Structural,,,,,
9,source making,"Application needs to manipulate a hierarchical collection of ""primitive"" and ""composite"" objects. Processing of a primitive object is handled one way, and processing of a composite object is handled differently. Having to query the ""type"" of each object before attempting to process it is not desirable.",Composite,Structural,,,,,
10,source making,You want to add behavior or state to individual objects at run-time. Inheritance is not feasible because it is static and applies to an entire class.,Decorator,Structural,,,,,
11,source making,A segment of the client community needs a simplified interface to the overall functionality of a complex subsystem.,Facade,Structural,,,,,
12,source making,"Designing objects down to the lowest levels of system ""granularity"" provides optimal flexibility, but can be unacceptably expensive in terms of performance and memory usage.",Flyweight,Structural,,,,,
13,source making,"A class may expose its attributes (class variables) to manipulation when manipulation is no longer desirable, e.g. after construction. Using the private class data design pattern prevents that undesirable manipulation.A class may have one-time mutable attributes that cannot be declared final. Using this design pattern allows one-time setting of those class attributes. The motivation for this design pattern comes from the design goal of protecting class state by minimizing the visibility of its attributes (data).",Private Class Data,Structural,,,,,
14,source making,"You need to support resource-hungry objects, and you do not want to instantiate such objects unless and until they are actually requested by the client.",Proxy,Structural,,,,,
15,source making,"There is a potentially variable number of ""handler"" or ""processing element"" or ""node"" objects, and a stream of requests that must be handled. Need to efficiently process the requests without hard-wiring handler relationships and precedence, or request-to-handler mappings.",Chain of Responsibility,Behavioral,,,,,
16,source making,Need to issue requests to objects without knowing anything about the operation being requested or the receiver of the request.,Command,Behavioral,,,,,
17,source making,"A class of problems occurs repeatedly in a well-defined and well-understood domain. If the domain were characterized with a ""language"", then problems could be easily solved with an interpretation ""engine"".",Interpreter,Behavioral,,,,,
18,source making,"Need to ""abstract"" the traversal of wildly different data structures so that algorithms can be defined that are capable of interfacing with each transparently.",Iterator,Behavioral,,,,,
19,source making,"We want to design reusable components, but dependencies between the potentially reusable pieces demonstrates the ""spaghetti code"" phenomenon (trying to scoop a single serving results in an ""all or nothing clump"").",Mediator,Behavioral,,,,,
20,source making,"Need to restore an object back to its previous state (e.g. ""undo"" or ""rollback"" operations).",Memento,Behavioral,,,,,
21,source making,"Given that an object reference may be optionally null, and that the result of a null check is to do nothing or use some default value, how can the absence of an object — the presence of a null reference — be treated transparently?",Null Object,Behavioral,,,,,
22,source making,A large monolithic design does not scale well as new graphing or monitoring requirements are levied.,Observer,Behavioral,,,,,
23,source making,"A monolithic object's behavior is a function of its state, and it must change its behavior at run-time depending on that state. Or, an application is characterized by large and numerous case statements that vector flow of control based on the state of the application.",State,Behavioral,,,,,
24,source making,"One of the dominant strategies of object-oriented design is the ""open-closed principle"". Figure demonstrates how this is routinely achieved - encapsulate interface details in a base class, and bury implementation details in derived classes. Clients can then couple themselves to an interface, and not have to experience the upheaval associated with change: no impact when the number of derived classes changes, and no impact when the implementation of a derived class changes. A generic value of the software community for years has been, ""maximize cohesion and minimize coupling"". The object-oriented design approach shown in figure is all about minimizing coupling. Since the client is coupled only to an abstraction (i.e. a useful fiction), and not a particular realization of that abstraction, the client could be said to be practicing ""abstract coupling"" . an object-oriented variant of the more generic exhortation ""minimize coupling"".
A more popular characterization of this ""abstract coupling"" principle is ""Program to an interface, not an implementation"".Clients should prefer the ""additional level of indirection"" that an interface (or an abstract base class) affords. The interface captures the abstraction (i.e. the ""useful fiction"") the client wants to exercise, and the implementations of that interface are effectively hidden",Strategy,Behavioral,,,,,
25,source making,"Two different components have significant similarities, but demonstrate no reuse of common interface or implementation. If a change common to both components becomes necessary, duplicate effort must be expended.",Template Method,Behavioral,1,,,,
26,source making,"Many distinct and unrelated operations need to be performed on node objects in a heterogeneous aggregate structure. You want to avoid ""polluting"" the node classes with these operations. And, you don't want to have to query the type of each node and cast the pointer to the correct type before performing the desired operation.",Visitor,Behavioral,,,,,
27,DP in java,addresses the situation in which a client knows when to create an object but doesn’t know which class to instantiate?,Factory Method,Creational,0,,,,
28,DP in java,provides for the storage and restoration of an object’s state,Memento,Behavioral,1,,,,
29,DP in java,"The mechanics of Java menus make it easy to apply the COMMAND pattern but do not require that you organize your code as commands. In fact, it is common to develop an application in which a single object listens to all the events in a GUI",Mediator,Behavioral,0,,,,
30,DP in java,Let classes in the ProcessComponent hierarchy implement iterator() to create instances of an appropriate iterator class,Factory Method,Creational,0,,,,
31,Wordware Applications Library,We need to make a builder more extendible to allow different functional processes to occur without changing the builder,Abstract Factory ,Creational,0,,,,
32,Wordware Applications Library,"We wish to have certain functions associated with a class type only when desired, but not all the time",Decorator,Structural,1,,,,
33,Wordware Applications Library,"We have several classes whose methods make up a process, but we need to control the order in which these classes are called by code outside the assembly",Facade,Structural,0,,,,
34,Wordware Applications Library,A text document uses individual object instances for each character and quickly becomes unwieldy,Flyweight,Structural,1,,,,
35,Wordware Applications Library,"You have an object in a different domain or server address you would like to access in the current domain, but do not want to allow construction of the object in the local domain",Proxy,Structural,1,,,,
36,Wordware Applications Library,A global class in the application needs to hide its constructor and maintain only one instance of itself while allowing all of its methods to be accessed as instance methods,Singleton,Creational,1,,,,
37,Wordware Applications Library,"A group of classes each have processes to run in turn, but there is no way to directly determine in which class order each should run its process",Chain of Responsibility,Behavioral,0,,,,
38,Wordware Applications Library,A document object needs a way to add and store undo and redo actions,Command,Behavioral,0.66,,,,
39,Wordware Applications Library,The format of a date needs to be different depending on the particular type of date expression needed,Interpreter,Behavioral,1,,,,
40,Wordware Applications Library,We need to create classes frommetadata from remote packages or assemblies and load them using a common interpreter,Interpreter,Behavioral,1,,,,
41,Wordware Applications Library,"A list object needs a way to move through each element in the list in consecutive order, retaining the position of the current record",Iterator,Behavioral,0,,,,
42,Wordware Applications Library,"Message windows reference each other directly, and if new windows are added the code cannot easily manage each window’s reference to the other",Mediator,Behavioral,0,,,,
43,Wordware Applications Library,A class needs to have its internal state captured and then restored without violating the class’s encapsulation,Memento,Behavioral,1,,,,
44,Wordware Applications Library," We have several child forms of an MDI form that we need to inform of changes that occur in the MDI form, and we have no way to do this automatically",Observer,Behavioral,0,0,,,
45,Wordware Applications Library,We have no way to determine the state of an object without performing calculations outside an object,State,Behavioral,1,1,,,
46,Wordware Applications Library,We have a series of algorithmic classes that have no correlation and are not easily exchanged but are needed to do so,Strategy,Behavioral,0,0,,,
47,Wordware Applications Library,Shared functionality between classes is desired without copying functionality,Template Method,Behavioral,0,0,,,
48,Wordware Applications Library,We wish to allow one class to use another’s methods without using direct inheritance,Adapter,Structural,0,0,,,
49,Wordware Applications Library,We need to allow a class to use functionality from a series of class types without using direct inheritance,Bridge,Structural,0.66,0.33,,,
50,Wordware Applications Library,A way is needed to allow a group of classes with a common method and different functionality to work together in sequence without compiling the sequence beforehand,Composite,Structural,0.33,0.33,,,
51,Wordware Applications Library,Different class types need a common interface to a factory method for creation of internal attributes,Factory Method,Creational,1,1,,,
52,Wordware Applications Library,We need to make a builder more extendible to allow different functional processes to occur without changing the builder ,Factory Method,Creational,0,0,,,
53,Wordware Applications Library,"A class needs several operations to create and initialize each of its attributes in an expected order of operations, and each class type instance needs different attribute values",Builder,Creational,0,0,,,
54,Wordware Applications Library,"A factory produces classes that need initialization, configuration, data, or state set during creation and this can differ between class types and spans multiple operations",Builder,Creational,0,0,0,,
55,Wordware Applications Library,A class that cannot be constructed outside its assembly or package needs a copy made that keeps its current state intact,Prototype,Creational,0,1,,,
